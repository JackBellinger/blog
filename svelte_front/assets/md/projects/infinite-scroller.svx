---
title: Infinite Scroller
coverImage: /blog/assets/images/projects/inf-scroll.webp
date: 2023-10-29T16:02:03.000Z
updated: 2023-11-11T17:49:12.000Z
excerpt: The design and implementation of this blog's infinite scroller component.
hidden: false
tags:
  - Blog
  - Svelte
---




<script>
  import Image from "@lib/components/atoms/Image.svelte";
</script>

### General idea
I want to make an infinite scrolling container for a list of items that can search by title and filter by tags. Ideally it would take as params the data source (a list of items or a database) and a component to display that data in (which needs to take that data as a prop); something like `<InfiniteScroller dataSource={BlogAsyncStore} displayComponent={BlogPostCard} />`. I'll have to think more about whether it should require the data items to have a tags object or to make tag filtering optional.


Currently, the blogs are stored as files on the server and imported into a store, but I plan to add a database to the backend after I add enough content, add testing, and find the right place to host.

#### Links, inspiration, etc

### Learnings

### Todo

- [x] Add scrolling list of blog summary cards
- [x] Add title search and tag filter for cards
- [x] Add reactive async store to implement the filter logic
- [ ] Add filter terms to query params
- [ ] Add blog database
- [ ] Make sure the api is abstract to handle any data and list display component
- [ ] Fine tune when to query for more items
- [ ] Dynamically remove and add tags of filtered items instead of always displaying all items' tags
- [ ] Publish component as seperate repo
- [ ] Maybe add title search autocompletion?